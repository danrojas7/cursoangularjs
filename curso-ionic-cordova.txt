
Curso de ionic

Prerequisitos para desarrollar en ionic
- Instalar node.js, en la versión LTS
- Instalar el Angular CLI
- Se debe instalar ionic, para instalar ionic se debe ingresar el siguiente comando, ingresar a la página https://ionicframework.com/ para más instrucciones:
$ npm install -g cordova ionic
$ npm install -g ionic # Instalar ionic sin cordova

Instalaciones adicionales:
- Descargar git de la página:
https://git-scm.com/download
- Posterior a la instalación de Git, se deben ejecutar los siguientes comandos:
$ git config --global user.email "email@example.com"
$ git config --global user.name "Mona Lisa"

Qué es ionic
Para poder desarrollar en plataformas como Android, iOS, ó Windows Phone, se deben conocer por lo menos los siguientes lenguajes de programación:
- Objective-C, y Swift para iOS
- Java para Android
- Visual C# para Windows Phone

Es un marco de trabajo parecido a bootstrap, tiene estilos, modals, controles de navegación, alertas, entre otras características. Que si se siguen estos lineamientos la aplicación va a parecer una aplicación nativa, pero corriendo en un navegador web. El objetivo es tomar todo el código html, css y javascript y transformarlo en una aplicación nativa, para esto ionic utiliza Angular como motor de su aplicación, ya que Angular va conectarse, ya que con Angular es quién va a procesar:
- Las peticiones https
- Procesar la data
- Va a realizar la petición a servicios
Junto con ionic, que se encarga de hacer ver la aplicación como si se fuera a ver en un celular, si se siguen estos lineamientos, y adicionalmente se pasa el desarrollo a través del framework de cordova, se terminará creando una aplicación totalmente nativa, es decir, una aplicación que se subirá a la playstore y a la appstore
- ionic 1 trabaja con AngularJS
- ionic 2 trabaja con Angular 2
con ionic se tienen las siguientes características:
- Estilos
- Navegación
- Tabs
- Alertas
- HTML
- SCSS y CSS
- Modals
- Listas
Cordova trae los siguienes plugins que tienen acceso a las características de hardware del dispositivo:
- 3D touch
- Cámara
- Contactos
- Browser
- Calendario
- Clipboard
- Share
- Archivos
- Shakes
- Giroscopios
- Geolocalización
Con Angular:
- Componentes
- Pipes
- HTTP
- Directivas
- Módulos
- Servicios
- Data binding


ionic 2 y ionic 3
- El cambio entre ionic 2 y ionic 3 noes significativo, como lo fue ionic 1 a la versión 2, en la cual hubo cmabio en la sintáxis del lenguaje
- Es una simple actualización mayor (la versión 3)
- ionic ahora utilizará el sistema de versionamiento semántico (x.y.z)
    - z corrección de bugs
    - y cambios menores en la experiencia de usuario sin ser un cambio radical
    - x si es un cambio considerable en la experiencia de usuario
- Como Angular, las versiones seguirán progresando hacia la versión 4, y y así sucesivamente pero seguirá siendo el mismo framework
- Existen muchas mejoras en la versión de ionic 3, y pocos cambios radicales (sin embargo los hay)

documentación de ionic framework
- Documentación: Components -> Todos los componentes gráficos
- Documentación: API -> Documentación de todos los componentes pero más detallada, como por ejemplo atributos, funciones, etc.
- Documentación: Native -> Documentación de todos los plugins de apache cordova.
- Documentación: Storage -> Documentación referente a la persistencia de información en el dispositivo
- Theming: Cambio de aspecto de aplicaciones
- ionicons: Se encuentran las librerías de íconos precargados para que se puedan utilizar en la aplicación
- CLI: Command Line Interface, emular dispositivo iOS o Android, generar aplicaciones, correr una aplicación, crear un servidor de pruebas

Crear una cuenta en ionic framework

https://dashboard.ionicjs.com/appstore
Visualizar dashboard con aplicaciones viejas
https://apps.ionic.io


crear un proyecto nuevo desde ceros de ionic
$ ionic start nuevo-proyecto blank --no-git

Obtener el listado de las plantillas disponibles:
$ ionic start --list

name     | project type  | description
--------------------------------------------------------------------------------------------------------------------------------
blank    | angular       | A blank starter project
sidemenu | angular       | A starting project with a side menu with navigation in the content area
tabs     | angular       | A starting project with a simple tabbed interface
tabs     | ionic-angular | A starting project with a simple tabbed interface
blank    | ionic-angular | A blank starter project
sidemenu | ionic-angular | A starting project with a side menu with navigation in the content area
super    | ionic-angular | A starting project complete with pre-built pages, providers and best practices for Ionic development.
tutorial | ionic-angular | A tutorial based project that goes along with the Ionic documentation
aws      | ionic-angular | AWS Mobile Hub Starter
tabs     | ionic1        | A starting project for Ionic using a simple tabbed interface
blank    | ionic1        | A blank starter project for Ionic
sidemenu | ionic1        | A starting project for Ionic using a side menu with navigation in the content area
maps     | ionic1        | An Ionic starter project using Google Maps and a side menu


Crear una nueva página
$ ionic generate page Detail --no-module


https://ionicframework.com/docs/cli

$ npm install -g ionic@latest

Empezar un nuevo proyecto
$ ionic start myNewProject

Usar codova
npm install -g cordova

Crear una nueva página
$ ionic generate page Login

Crear un nuevo provider (servicio)
$ ionic generate provider usuario


Estructura de carpetas y directorios
/resources
recursos para las plataformas de ios y android, también es para modificar las imágenes de icon.png y splash.png

Para manipular los recursos de las plataformas, existen comandos de ionic para modificarlos, por lo cual no se modifican directamente

.editorconfig
Archivo propio del editor de código que se está usando

.gitignore
Todo lo que se encuentre en este archivo no se va a versionar en git

config.xml
id, es el generado automáticamente por ionic, en ese caso se pone de manera inversa el id de la aplicación, por ejemplo: com.fernandoherrera.app0001, es importante para desplegar en las tiendas.
El archivo se va a ir modificando de manera automática, por lo tanto cuando se agreguen plugins de cordoba entre otras cosas, ionic modificará automáticamente el archivo. El archivo indica a  ionic cómo compilar el instalador en las diferentes plataformas según la información adjunta en él.

ionic.config.json
Configuraciones del dashboard de ionic, el archivo se manipula también de forma automática

package-lock.json
Es un archivo, lo manipula de manera automática node, que indica con qué paquetes fue construida la aplicación, no es tan importante como el archivo:

package.json
tiene información de la aplicación, la versión y el autor, lo que se puede modificar, la sección de scrips no se deben modificar, las dependencias son todas los paquetes que se van a instalar en el proyecto, por lo general se van a utilizar las últimas versiones que se estén manejando, pero igual si se requiere adicionar una manualmente para ser instalada se puede hacer.
Las dependencias de desarrollo, no van a ir a la hora de pasar la aplicación al dispositivo movil, pero si se van a utilizar como dependencia de desarrollo en el proyecto

tsconfig.json
Archivo de configuración global del typescript, en el que se indica la versión en la que está trabajando el typescript (ECMA6), si se desea compilar cada vez que se guarde el proyecto, entre otras configuraciones

tslint.json
archivo que indica a los plugins del editor de código para darles ayuda al momento de escribir el código, como por ejemplo subrayar errores de sintáxis entre otras ayudas

/src
Los códigos fuente de la aplicación
dentro del directorio app/ se encuentra los fuentes del componente root de la aplicación
- app.component.ts, es el primer componente que se lanza cuando se carga la aplicación
- app.html html desde donde se lanza el rootPage
- app.module.ts archivo en el que se le indica a la aplicación qué páginas tiene, qué servicios usa, qué plugins se están utilizando
- app.scss archivo sas que permite configuraciones globales de archivos de estilos, tambièén se pueden utilizar estilos css sin problema en estos archivos
- main.ts es propio de angular, cuando se arranque la aplicación indica qué módulo se va a cargar

/assets
Recursos estáticos, imágenes e íconos a que va a emplear la aplicación

component.module.ts, archivo para registrar los componentes entre otros que se van a utilizar de manera local dentro del componente donde es declarado, sin embargo no quedan de manera global como cuando se registran en el app.module.ts

providers, son los servicios, uso de peticiones http
theme, estilos para modificar

index.html, es el mismo index de angular
manifest.json indica colores entre otros en aplicaciones progresivas
service-worker.js un archivo que indica que se van a trabajar características de manera nativa a la plataforma en donde se va desplegar la aplicación

comando para generar las carpetas de la plataforma, crea una aplicación de java lista para agregar por android studio:
$ ionic cordova platform add android

Si las aplicaciones en android fallan, resuelve problemas de versiones de construcción del build, se deben tener en cuenta esos comandos
ionic cordova platform remove android
ionic cordova platform add android@6.4.0
ionic cordova build android


Empaquetar proyecto en ionic
Instalar en el proyecto las dependencias para la plataforma
$ ionic cordova build android
Generar el build
$ ionic cordova build android --prod --release




Dato para preaprobado
50937772

mongo -u $MONGODB_USER -p $MONGODB_PASSWORD dashboard
date '+%A %W %Y %X'

Generar un archivo war de ionic
$ npm install grunt-war --save-dev
$ npm install -g grunt-cli
$ npm install grunt -g
$ npm install grunt --save-dev
$ npm install
$ ng build --prod --base-href "/dashboard/"
$ grunt


Integrar cordova a un proyecto ionic
$ ionic integrations enable cordova

